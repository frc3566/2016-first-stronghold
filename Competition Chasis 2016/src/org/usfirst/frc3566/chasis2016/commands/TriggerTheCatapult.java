// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3566.chasis2016.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3566.chasis2016.Robot;
import org.usfirst.frc3566.chasis2016.RobotMap;

/**
 *
 */
public class TriggerTheCatapult extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	
	boolean allDone = false;
	
    public TriggerTheCatapult() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.catapultWinchAimer);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	allDone = false;
    	this.setTimeout(6);  //currently timing out after 6 seconds as a safety
    	
    	//Set the Dog Gear on the Big winch to off
    	Robot.catapultWinchAimer.winchServoRelease2Fire();
    	
    	//waiting....
    	try{
    		this.wait(500);
    	}catch(Exception e){
    		
    	}
    	
    	while(Robot.catapultWinchAimer.getCatTriggerFIREStopSwitchState()== RobotMap.OPEN){
    		Robot.catapultWinchAimer.runCatapultTrigger(RobotMap.CATAPULT_TRIGGER_SPEED* -1.0);
    		
    		//maybe we want to use this...
    		//try{
        	//	this.wait(750);
        	//}catch(Exception e){
        	//	
    	}
    	
    	
    	
    	
    	Robot.catapultWinchAimer.runCatapultTrigger(0.0);
    	try{
    		this.wait(750);
    	}catch(Exception e){
    		
    	}
    	
    	
    	while(Robot.catapultWinchAimer.getCatTriggerReadyForCatLoadSwitchState()== RobotMap.OPEN){
    		Robot.catapultWinchAimer.runCatapultTrigger(RobotMap.CATAPULT_TRIGGER_SPEED);
    		
    		//maybe we want to use this...
    		//try{
        	//	this.wait(750);
        	//}catch(Exception e){
        	//	
    	}
    	
    	
    	Robot.catapultWinchAimer.runCatapultTrigger(0.0);
    	
    	allDone = true;
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
         return (this.isTimedOut() || allDone);
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
